var search_data = {"index":{"searchIndex":["libxslt","resulterror","xslt","stylesheet","xslterror","object","xslt","apply()","file()","io()","new()","output()","register_module_function()","registered_module_function?()","string()","transform()","unregister_module_function()","changes","license","readme"],"longSearchIndex":["libxslt","libxslt::resulterror","libxslt::xslt","libxslt::xslt::stylesheet","libxslt::xslterror","object","xslt","libxslt::xslt::stylesheet#apply()","libxslt::xslt::stylesheet::file()","libxslt::xslt::stylesheet::io()","libxslt::xslt::stylesheet::new()","libxslt::xslt::stylesheet#output()","libxslt::xslt::register_module_function()","libxslt::xslt::registered_module_function?()","libxslt::xslt::stylesheet::string()","libxslt::xslt::stylesheet#transform()","libxslt::xslt::unregister_module_function()","","",""],"info":[["LibXSLT","","LibXSLT.html","",""],["LibXSLT::ResultError","","LibXSLT/ResultError.html","",""],["LibXSLT::XSLT","","LibXSLT/XSLT.html","","<p>The libxslt gem provides Ruby language bindings for GNOME&#39;s Libxslt toolkit. It is free software, …\n"],["LibXSLT::XSLT::Stylesheet","","LibXSLT/XSLT/Stylesheet.html","","<p>The XSLT::Stylesheet represents a XSL stylesheet that can be used to transform an XML document.  For …\n"],["LibXSLT::XSLTError","","LibXSLT/XSLTError.html","",""],["Object","","Object.html","",""],["XSLT","","XSLT.html","",""],["apply","LibXSLT::XSLT::Stylesheet","LibXSLT/XSLT/Stylesheet.html#method-i-apply","(*args)","<p>Apply this stylesheet transformation to the provided document. This method may be invoked multiple times. …\n"],["file","LibXSLT::XSLT::Stylesheet","LibXSLT/XSLT/Stylesheet.html#method-c-file","(filename)","<p>create a xslt stylesheet from a file specified by its filename\n"],["io","LibXSLT::XSLT::Stylesheet","LibXSLT/XSLT/Stylesheet.html#method-c-io","(io_object)","<p>create a xslt stylesheet from an io object\n"],["new","LibXSLT::XSLT::Stylesheet","LibXSLT/XSLT/Stylesheet.html#method-c-new","(p1)","<p>Creates a new XSLT stylesheet based on the specified document. For memory management reasons, a copy …\n"],["output","LibXSLT::XSLT::Stylesheet","LibXSLT/XSLT/Stylesheet.html#method-i-output","(p1)","<p>Output an xml document, usually the result of an xslt transformation, and return the result as a string. …\n"],["register_module_function","LibXSLT::XSLT","LibXSLT/XSLT.html#method-c-register_module_function","(p1, p2)","<p>Registers <code>name</code> as extension module function in <code>namespace</code> with the block as callback. Returns the callback …\n"],["registered_module_function?","LibXSLT::XSLT","LibXSLT/XSLT.html#method-c-registered_module_function-3F","(p1, p2)","<p>Returns <code>true</code> if <code>name</code> is currently registered as extension module function in <code>namespace</code>, or <code>false</code> otherwise. …\n"],["string","LibXSLT::XSLT::Stylesheet","LibXSLT/XSLT/Stylesheet.html#method-c-string","(xml)","<p>create a xslt stylesheet from a string\n"],["transform","LibXSLT::XSLT::Stylesheet","LibXSLT/XSLT/Stylesheet.html#method-i-transform","(doc)","<p>transform a xml to a string\n"],["unregister_module_function","LibXSLT::XSLT","LibXSLT/XSLT.html#method-c-unregister_module_function","(p1, p2)","<p>Unregisters <code>name</code> as extension module function in <code>namespace</code>. Returns the previous callback if successful, …\n"],["CHANGES","","CHANGES.html","","<p>1.2.0 / 2020-05-19 Charlie Savage\n<p>Remove deprecated functions (Charlie Savage)\n<p>Remove reference to unsupported …\n"],["LICENSE","","LICENSE.html","","<p># $Id$\n<p>Copyright © 2002-2006 Sean Chittenden &lt;sean@chittenden.org&gt; and contributors\n<p>Permission …\n"],["README","","README_rdoc.html","","<p>libxslt-ruby\n<p>Overview\n<p>The libxslt gem provides Ruby language bindings for GNOME&#39;s Libxslt toolkit. …\n"]]}}